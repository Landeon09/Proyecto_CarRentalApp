name: ci # Nombre del workflow

on:
  push:
    branches: [sonar] # Rama en la que se ejecutará este workflow

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    env: 
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      WHATSAPP_API_URL: ${{ secrets.WHATSAPP_API_URL }}
      API_KEY_CREDENTIAL: ${{ secrets.API_KEY_CREDENTIAL }}
      AUTH_DOMAIN_CREDENTIAL: ${{ secrets.AUTH_DOMAIN_CREDENTIAL }}
      DATABASE_URL_CREDENTIAL: ${{ secrets.DATABASE_URL_CREDENTIAL }}
      PROJECT_ID_CREDENTIAL: ${{ secrets.PROJECT_ID_CREDENTIAL }}
      STORAGE_BUCKET_CREDENTIAL: ${{ secrets.STORAGE_BUCKET_CREDENTIAL }}
      MESSAGING_SENDER_ID_CREDENTIAL: ${{ secrets.MESSAGING_SENDER_ID_CREDENTIAL }}
      APP_ID_CREDENTIAL: ${{ secrets.APP_ID_CREDENTIAL }}
      MEASUREMENT_ID_CREDENTIAL: ${{ secrets.MEASUREMENT_ID_CREDENTIAL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    steps:
      # 1. Descargar el código fuente
      - name: 🏗 Download source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Para un análisis más relevante de SonarQube

      # 2. Configurar Node.js
      - name: 🏗 Configure Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm

      # 3. Configurar Expo
      - name: 🏗 Configure Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      # 4. Configurar npm para legacy-peer-deps
      - name: 📝 Configure npm
        run: echo "legacy-peer-deps=true" >> ~/.npmrc

      # 5. Instalar dependencias
      - name: 📦 Install dependencies
        run: npm install

      # 6. Ejecutar pruebas unitarias
      - name: 🧪 Run unit tests
        run: npm test

      # 7. Ejecutar análisis de SonarQube
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: |
            -Dsonar.projectKey=github
            -Dsonar.projectName=github
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=.
            -Dsonar.language=js
            -Dsonar.sourceEncoding=UTF-8 
      # 9. Desplegar preview en Expo
      - name: 🚀 Deploy to Expo Preview
        run: eas update --auto --non-interactive

      # 10. Configurar credenciales
      - name: Print Firebase Config
        run: cat firebase-config.js

      - name: Clean Credentials
        run: |
          sed -i 's/API_KEY_CREDENTIAL/${API_KEY_CREDENTIAL}/g' firebase-config.js 
          sed -i 's/AUTH_DOMAIN_CREDENTIAL/${AUTH_DOMAIN_CREDENTIAL}/g' firebase-config.js
          sed -i 's/DATABASE_URL_CREDENTIAL/${DATABASE_URL_CREDENTIAL}/g' firebase-config.js
          sed -i 's/PROJECT_ID_CREDENTIAL/${PROJECT_ID_CREDENTIAL}/g' firebase-config.js
          sed -i 's/STORAGE_BUCKET_CREDENTIAL/${STORAGE_BUCKET_CREDENTIAL}/g' firebase-config.js
          sed -i 's/MESSAGING_SENDER_ID_CREDENTIAL/${MESSAGING_SENDER_ID_CREDENTIAL}/g' firebase-config.js
          sed -i 's/MEASUREMENT_ID_CREDENTIAL/${MEASUREMENT_ID_CREDENTIAL}/g' firebase-config.js
          sed -i 's/APP_ID_CREDENTIAL/${APP_ID_CREDENTIAL}/g' firebase-config.js

      - name: Print Firebase Config Secured
        run: cat firebase-config.js

      # 11. Notificación por WhatsApp
      - name: 📲 Notify on WhatsApp
        if: success()
        env:
          ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
        run: |
          curl 'https://api.twilio.com/2010-04-01/Accounts/${{ secrets.TWILIO_ACCOUNT_SID }}/Messages.json' -X POST \
          --data-urlencode 'To=whatsapp:+51951664953' \
          --data-urlencode 'From=whatsapp:+14155238886' \
          --data-urlencode 'ContentSid=HXb5b62575e6e4ff6129ad7c8efe1f983e' \
          --data-urlencode 'ContentVariables={"1":"El despliegue y las pruebas unitarias se completaron con éxito.","2":"¡Felicidades!"}' \
          -u "${{ secrets.TWILIO_ACCOUNT_SID }}:${{ secrets.TWILIO_AUTH_TOKEN }}"
