name: ci

on:
  push:
    branches: [landeon2_screens] # Nombre de la rama

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    env: 
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      WHATSAPP_API_URL: ${{ secrets.WHATSAPP_API_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      # Descargar el código fuente
      - name: 🏗 Download source code
        uses: actions/checkout@v3

      # Configurar Node.js
      - name: 🏗 Configure Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm

      # Configurar Expo
      - name: 🏗 Configure Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      # Crear un archivo .npmrc para forzar legacy-peer-deps
      - name: 📝 Configure npm
        run: echo "legacy-peer-deps=true" >> ~/.npmrc

      # Instalar dependencias
      - name: 📦 Install dependencies
        run: npm install

      # Ejecutar pruebas unitarias
      - name: 🧪 Run unit tests
        run: npm test

      # Configurar SonarQube Scanner con Java 17
      - name: 🔍 Configure Java for SonarQube
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Escanear código con SonarQube
      - name: 🔍 Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner \
            -Dsonar.projectKey=my_project_key \
            -Dsonar.organization=my_organization \
            -Dsonar.sources=./ \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${SONAR_TOKEN}

      # Desplegar preview en Expo
      - name: 🚀 Deploy to Expo Preview
        run: eas update --auto --non-interactive

      # Notificación por WhatsApp (opcional) 
      - name: 📲 Notify on WhatsApp
        if: success()
        env:
          ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
        run: |
          curl 'https://api.twilio.com/2010-04-01/Accounts/AC11c4d3a75c4468650fa267d6071e3904/Messages.json' -X POST \
          --data-urlencode 'To=whatsapp:+51951664953' \
          --data-urlencode 'From=whatsapp:+14155238886' \
          --data-urlencode 'ContentSid=HXb5b62575e6e4ff6129ad7c8efe1f983e' \
          --data-urlencode 'ContentVariables={"1":"El despliegue y las pruebas unitarias se completaron con éxito. ","2":"Felicidades!!!!"}' \
          -u "${ACCOUNT_SID}:${AUTH_TOKEN}"
